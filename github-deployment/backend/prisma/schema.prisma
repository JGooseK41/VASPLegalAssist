// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                      String    @id @default(uuid())
  email                   String    @unique
  password                String
  firstName               String
  lastName                String
  agencyName              String
  agencyAddress           String?
  badgeNumber             String?
  title                   String?
  phone                   String?
  role                    String    @default("USER")
  isEmailVerified         Boolean   @default(false)
  emailVerificationToken  String?
  emailVerificationExpiry DateTime?
  isApproved              Boolean   @default(false)
  lastSurveyReminderShown DateTime?
  createdAt               DateTime  @default(now())
  updatedAt               DateTime  @updatedAt
  
  templates               DocumentTemplate[]
  documents               Document[]
  sessions                UserSession[]
  passwordResetTokens     PasswordResetToken[]
}

model DocumentTemplate {
  id              String    @id @default(uuid())
  userId          String
  templateType    String
  templateName    String
  agencyHeader    String
  agencyAddress   String
  agencyContact   String
  footerText      String
  signatureBlock  String
  customFields    String?   // JSON string for additional fields
  isDefault       Boolean   @default(false)
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
  
  user            User      @relation(fields: [userId], references: [id])
}

model Document {
  id                  String    @id @default(uuid())
  userId              String
  vaspId              Int
  vaspName            String
  vaspJurisdiction    String
  vaspEmail           String
  documentType        String
  caseNumber          String
  crimeDescription    String
  statute             String
  transactionDetails  String    // JSON string
  requestedData       String    // JSON string
  pdfUrl              String?
  createdAt           DateTime  @default(now())
  
  user                User      @relation(fields: [userId], references: [id])
  transactionImports  TransactionImport[]
}

model TransactionImport {
  id              String    @id @default(uuid())
  documentId      String
  csvData         String    // JSON string
  processed       Boolean   @default(false)
  createdAt       DateTime  @default(now())
  
  document        Document  @relation(fields: [documentId], references: [id])
}

model UserSession {
  id              String    @id @default(uuid())
  userId          String
  token           String    @unique
  ipAddress       String?
  userAgent       String?
  isActive        Boolean   @default(true)
  expiresAt       DateTime
  createdAt       DateTime  @default(now())
  
  user            User      @relation(fields: [userId], references: [id])
}

model PasswordResetToken {
  id              String    @id @default(uuid())
  userId          String
  token           String
  expiresAt       DateTime
  used            Boolean   @default(false)
  createdAt       DateTime  @default(now())
  
  user            User      @relation(fields: [userId], references: [id])
}